kind: ConfigMap
apiVersion: v1
metadata:
  name: nginx-$DEPLOYMENT
  namespace: $NAMESPACE
data:
  nginx.conf: |
    worker_processes 1;

    user nobody nogroup;
    # 'user nobody nobody;' for systems with 'nobody' as a group instead
    error_log  /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;

    events {
      worker_connections 1024; # increase if you have lots of clients
      accept_mutex off; # set to 'on' if nginx worker_processes > 1
      # 'use epoll;' to enable for Linux 2.6+
      # 'use kqueue;' to enable for FreeBSD, OSX
    }

    http {
      include mime.types;
      # fallback in case we can't determine a type
      default_type application/octet-stream;
      access_log /var/log/nginx/access.log combined;
      sendfile on;

      upstream app_server {
        # fail_timeout=0 means we always retry an upstream even if it failed
        # to return a good HTTP response

        # for UNIX domain socket setups
        # server unix:/tmp/gunicorn.sock fail_timeout=0;

        # for a TCP configuration
        server 127.0.0.1:8000 fail_timeout=0;
      }

      server {
        # if no Host match, close the connection to prevent host spoofing
        listen 80 default_server;
        return 444;
      }

      # server {
      #   listen 80;
      #   listen [::]:80;
      #   server_name $APP_URL.com;
      #   return 301 https://$server_name$request_uri;
      # }

      server {
        # use 'listen 80 deferred;' for Linux
        # use 'listen 80 accept_filter=httpready;' for FreeBSD
        listen 80;
        client_max_body_size 4G;

        # set the correct host(s) for your site
        server_name $APP_URL;

        keepalive_timeout 5;

        # path for static files
        root /path/to/app/current/public;

        location / {
          # checks for static file, if not found proxy to app
          try_files $uri @proxy_to_app;

          if ($request_method = 'OPTIONS') {
              add_header 'Access-Control-Allow-Origin' '*';
              add_header 'Access-Control-Allow-Methods' 'GET, PATCH, PUT, OPTIONS, POST, DELETE';
              add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Amz-Date,baggage,sentry-trace';
              add_header 'Access-Control-Max-Age' 86400;
              add_header 'Content-Type' 'text/html; charset=utf-8';
              add_header 'Content-Length' 0;
              return 204;
          }
          if ($request_method = 'PATCH') {
              add_header 'Access-Control-Allow-Methods' 'GET, PATCH, PUT, OPTIONS, POST, DELETE';
              add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Amz-Date,baggage,sentry-trace';
              add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
          }
          if ($request_method = 'PUT') {
              add_header 'Access-Control-Allow-Methods' 'GET, PATCH, PUT, OPTIONS, POST, DELETE';
              add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Amz-Date,baggage,sentry-trace';
              add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
          }
          if ($request_method = 'GET') {
              add_header 'Access-Control-Allow-Origin' '*';
              add_header 'Access-Control-Allow-Methods' 'GET, PATCH, PUT, OPTIONS, POST, DELETE';
              add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Amz-Date,baggage,sentry-trace';
              add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
          }
          if ($request_method = 'POST') {
              add_header 'Access-Control-Allow-Origin' '*';
              add_header 'Access-Control-Allow-Methods' 'GET, PATCH, PUT, OPTIONS, POST, DELETE';
              add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Amz-Date,baggage,sentry-trace';
              add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
          }
        }

        location @proxy_to_app {
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header Host $http_host;
          # we don't want nginx trying to do something clever with
          # redirects, we set the Host: header above already.
          proxy_redirect off;
          proxy_pass http://app_server;
        }

        error_page 500 502 503 504 /500.html;
        location = /500.html {
          root /path/to/app/current/public;
        }
      }
    }
